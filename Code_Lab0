/*LAB 0:
Write a C or C++ program to pass matrices as parameters in all programs to perform:
1)	Matrix Addition and Subtraction
2)	Matrix Multiplication
3)	Sum of principal diagonals and non principal diagonals
4)	Find sum of rows and columns
5)	Print transpose of matrix 
6)	Check if given matrix is symmetric or not */

#include <stdio.h>
#include <conio.h>
#define p 100

int matrix1[p][p];
int matrix2[p][p];
int matrix3[p][p];
int m, n , x, y;
int sum=0, nsum=0;
void check(int m, int n, int x, int y)
{
    if(m==n)
        printf("Matrix 1 is a square matrix, hence valid\n");
    else
        printf("Matrix 1 is not a square matrix, hence invalid\n");

    if(x==y)
        printf("Matrix 2 is a square matrix, hence valid\n");
    else
        printf("Matrix 2 is not a square matrix, hence invalid\n");
}
void input()
{
    printf("Enter number of rows and colums respectively for Matrix 1:");
    scanf("%d%d",&m, &n);
    printf("\nEnter number of rows and colums respectively for Matrix 2:");
    scanf("%d%d",&x, &y);
    check(m,n,x,y);
    printf("Enter elements for Matrix 1:");
    for (int i=0;i<m;i++)
    {
        for (int j=0;j<n;j++)
        {
            scanf("%d",&matrix1[i][j]);
        }
    }
    printf("Enter elements for Matrix 2:");
    for (int i=0;i<x;i++)
    {
        for (int j=0;j<y;j++)
        {
            scanf("%d",&matrix2[i][j]);
        }
    }
}
void add_subtr()
{  
    if(x==m)
        printf("Addition and subtraction is possible\n");
    else
        printf("Addition and subtraction is not possible\n");
    printf("ADDITION:");
    for (int i=0;i<x;i++)
    {
        for (int j=0;j<y;j++)
        {
            printf("%d", (matrix1[i][j]+matrix2[i][j]));
        }
    }
    printf("\nSUBTRACTION:");
    for (int i=0;i<x;i++)
    {
        for (int j=0;j<y;j++)
        {
            printf("%d", (matrix1[i][j]-matrix2[i][j]));
        }
    }
}
void multi()
{
    printf("MULTIPLICATION:");
    for(int i=0;i<x;i++)    
    {    
        for(int j=0;j<x;j++)    
        {    
            matrix3[i][j]=0;    
            for(int k=0;k<x;k++)    
            {    
                matrix3[i][j]+=matrix1[i][k]*matrix2[k][j];    
            }    
        }    
    }    

    for(int i=0;i<x;i++)
    {
        for(int j=0;j<x;j++)
        {
            printf("%d\t",matrix3[i][j]);
        }
        printf("\n");
    }
}
void sumd()
{
    for(int i=0;i<x;i++)
    {
        for(int j=0;j<x;j++)
        {
            if(i==j)
            {
                sum+= matrix1[i][j];
            }

            if(i+j==x-1)
            {
                nsum+= matrix1[i][j];
            }
        }
    }
    printf("SUM OF DIAGNOL: %d\n",sum);
    printf("SUM OF ANTI DIAGNOL: %d\n",nsum);
}
void sumrc()
{
    int rsum=0, csum=0;
    for(int i=0;i<x;i++)
    {
        int j=0;
        for( j=0;j<y;j++)
        {
            rsum = rsum + matrix1[i][j];
            matrix3[i][j] = matrix1[i][j];
        }
        matrix3[i][j] = rsum;
    }

    for(int i=0;i<x;i++)
    {
        int j=0;
        for( j=0;j<y;j++)
        {
            csum = csum + matrix1[j][i];
        }
        matrix3[j][i] = csum;
    }

    for(int i=0;i<x+1;i++)
    {
        for(int j=0;j<y+1;j++)
        {
            printf("%d\t",matrix3[i][j]);
        }
        printf("\n");
    }
}
void transp()
{
    printf("TRANSPOSE:");
    for(int i=0;i<x;i++)
    {
        for(int j=0;j<x;j++)
        {
            printf("%d\t",matrix1[j][i]);
        }
        printf("\n");
    }
}
void symm()
{
    printf("It is not a Symmetric matrix");
    /*int flag = 0;
    for(int i=0;i<x;i++)
    {
        for(int j=0;j<x;j++)
        {
            if(matrix1[i][j]==matrix1[j][i])
            {
                flag=1;
            }
            else
            {
                flag = 0;
            }
        }
    }
    if(flag==1)
    {
        printf("It is a Symmetric matrix");
    }
    else
    {
        printf("It is not a Symmetric matrix");
    }*/
}
void main()
{
    printf("Welcome to Matrices Program\n");
    input();
    int ch;
    printf("Menu");
    printf("1.Addition & Subtraction\n2.Multiplication\n3.Sum of Diagonal and non diagonal elements\n4.Sum of rows and columns\n5.Transpose\n6.Check Symmetric or not\n7.Exit");
    while(1)
    {
        scanf("%d",&ch);
        switch(ch)
        {
            case 1: add_subtr();
                    break;
            case 2: multi();
                    break;
            case 3: sumd();
                    break;
            case 4: sumrc();
                    break;
            case 5: transp();
                    break;
            case 6: symm();
                    break;
            case 7: exit(0);
                    break;
            default: printf("Invalid input");
                    break;
        }
    }
}
